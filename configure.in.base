
PACKAGE=salome
AC_SUBST(PACKAGE)

VERSION=0.0.1
AC_SUBST(VERSION)

dnl
dnl Initialize source and build root directories
dnl

ROOT_BUILDDIR=`pwd`
ROOT_SRCDIR=`echo $0 | sed -e "s,[[^/]]*$,,;s,/$,,;s,^$,.,"`
cd $ROOT_SRCDIR
ROOT_SRCDIR=`pwd`
cd $ROOT_BUILDDIR

AC_SUBST(ROOT_SRCDIR)
AC_SUBST(ROOT_BUILDDIR)

echo
echo Source root directory : $ROOT_SRCDIR
echo Build  root directory : $ROOT_BUILDDIR
echo
echo

dnl remember MED_WITH_KERNEL set by build configure
old_with_kernel=${MED_WITH_KERNEL}

dnl
dnl Check --with-kernel option
echo
dnl  ---------------------------------------------
                 WITH_KERNEL
dnl  ---------------------------------------------
dnl

dnl   Update and re-run configure if there was  build_configure --without-kernel
dnl   but configure --with-kernel=DIR is being called

if test "x${old_with_kernel}" != "x${MED_WITH_KERNEL}"; then
    if test "x${old_with_kernel}" == "xno" ; then
         if test ! -d "${KERNEL_ROOT_DIR}"; then
             echo "failed : KERNEL_ROOT_DIR variable is not correct !"
             exit
         fi
         kernel_check_in_aclocal=`grep KERNEL_ROOT_DIR ${ROOT_SRCDIR}/aclocal.m4`
         if test "x${kernel_check_in_aclocal}" == "x"; then
             echo "Configuration changed: without KERNEL -> with KERNEL"
             echo -n "Updating 'configure' script ...  "
             cd $ROOT_SRCDIR
             aclocal --acdir=adm_local/unix/config_files -I ${KERNEL_ROOT_DIR}/salome_adm/unix/config_files
             if autoconf; then
             	echo "done"
             else
             	echo "failed (check file permissions and/or user quotas ...)"
                cd $ROOT_BUILDDIR
                exit
             fi
             cd $ROOT_BUILDDIR
             $0 $*
             exit
         fi
    fi
fi


dnl  AC_CONFIG_AUX_DIR - path to install-sh, config.sub, config.guess,
dnl  Automake and Libtool scripts etc. 
dnl  config.sub, config.guess are needed for AC_CANONICAL_HOST

WITHOUT_KERNEL_CONFIG_DIR=${ROOT_SRCDIR}/adm_local_without_kernel/unix/config_files
AUX_CONFIG_DIR=""
if test "${MED_WITH_KERNEL}" == "yes"; then
   AUX_CONFIG_DIR=${KERNEL_ROOT_DIR}/salome_adm/unix/config_files
else
   AUX_CONFIG_DIR=${WITHOUT_KERNEL_CONFIG_DIR}
fi
AC_CONFIG_AUX_DIR(${AUX_CONFIG_DIR})
AC_CANONICAL_HOST


dnl Modification B. Secher portage sur osf CCRT
AC_CHECK_PROG(SHELL,sh,,)
AC_SUBST(SHELL)

if test -z "$AR"; then
   AC_CHECK_PROGS(AR,ar xar,:,$PATH)
fi
AC_SUBST(AR)

dnl Export the AR macro so that it will be placed in the libtool file
dnl correctly.
export AR

echo
echo ---------------------------------------------
echo testing make
echo ---------------------------------------------
echo

AC_PROG_MAKE_SET
AC_PROG_INSTALL
dnl 
dnl libtool macro check for CC, LD, NM, LN_S, RANLIB, STRIP + pour les librairies dynamiques !

AC_ENABLE_DEBUG(yes)
AC_DISABLE_PRODUCTION

echo ---------------------------------------------
echo testing libtool
echo ---------------------------------------------

dnl first, we set static to no!
dnl if we want it, use --enable-static
AC_ENABLE_STATIC(no)

AC_LIBTOOL_DLOPEN
AC_PROG_LIBTOOL

dnl Fix up the INSTALL macro if it s a relative path. We want the
dnl full-path to the binary instead.
case "$INSTALL" in
   *install-sh*)
      INSTALL="\${AUX_CONFIG_DIR}/install-sh -c"
      ;;
esac

echo
echo ---------------------------------------------
echo testing C/C++
echo ---------------------------------------------
echo

cc_ok=no
dnl inutil car libtool
dnl AC_PROG_CC
AC_PROG_CXX
AC_CXX_WARNINGS
AC_CXX_TEMPLATE_OPTIONS
AC_DEPEND_FLAG
# AC_CC_WARNINGS([ansi])
cc_ok=yes

dnl Library libdl :
AC_CHECK_LIB(dl,dlopen)

dnl add library libm :
AC_CHECK_LIB(m,ceil)

dnl Library librt : for alpha/osf
AC_CHECK_LIB(rt,nanosleep)

dnl 
dnl Check if we use std iostream by default or if we must add
dnl a compiler directive for that
dnl

AC_CXX_USE_STD_IOSTREAM

dnl 
dnl Well we use sstream which is not in gcc pre-2.95.3
dnl We must test if it exists. If not, add it in include !
dnl

AC_CXX_HAVE_SSTREAM

dnl
dnl ---------------------------------------------
dnl testing linker
dnl ---------------------------------------------
dnl

AC_LINKER_OPTIONS

echo
echo ---------------------------------------------
echo testing LEX \& YACC
echo ---------------------------------------------
echo

lex_yacc_ok=no
AC_PROG_YACC
AC_PROG_LEX
lex_yacc_ok=yes

echo
echo ---------------------------------------------
echo testing python
echo ---------------------------------------------
echo

CHECK_PYTHON

echo
echo ---------------------------------------------
echo testing swig
echo ---------------------------------------------
echo

CHECK_SWIG

echo
echo ---------------------------------------------
echo testing threads
echo ---------------------------------------------
echo

ENABLE_PTHREADS

dnl BOOST is needed for MED Wrapper
echo
echo ---------------------------------------------
echo BOOST Library
echo ---------------------------------------------
echo

CHECK_BOOST

echo
echo ---------------------------------------------
echo testing HDF5
echo ---------------------------------------------
echo

CHECK_HDF5

echo
echo ---------------------------------------------
echo testing MED2
echo ---------------------------------------------
echo

CHECK_MED2


if test "${MED_WITH_KERNEL}" == "yes"; then
{
#CPPFLAGS="$CPPFLAGS -DMED_WITH_KERNEL"

dnl echo
dnl echo ---------------------------------------------
dnl echo testing java
dnl echo ---------------------------------------------
dnl echo

dnl CHECK_JAVA

dnl
dnl ---------------------------------------------
dnl testing MPICH
dnl ---------------------------------------------
dnl

CHECK_MPI
CHECK_MPICH

dnl
dnl ---------------------------------------------
dnl testing WITHIHM
dnl ---------------------------------------------
dnl

CHECK_WITHIHM

echo
echo ---------------------------------------------
echo testing omniORB
echo ---------------------------------------------
echo

CHECK_OMNIORB

echo
echo ---------------------------------------------
echo default ORB : omniORB
echo ---------------------------------------------
echo

DEFAULT_ORB=omniORB
CHECK_CORBA

AC_SUBST_FILE(CORBA)
corba=make_$ORB
CORBA=adm_local/unix/$corba

echo
echo ---------------------------------------------
echo testing openGL
echo ---------------------------------------------
echo

CHECK_OPENGL

echo
echo ---------------------------------------------
echo testing QT
echo ---------------------------------------------
echo

CHECK_QT

echo
echo ---------------------------------------------
echo testing VTK
echo ---------------------------------------------
echo

CHECK_VTK

echo
echo ---------------------------------------------
echo Testing OpenCascade
echo ---------------------------------------------
echo

CHECK_CAS

echo
echo ---------------------------------------------
echo Testing Kernel
echo ---------------------------------------------
echo

CHECK_KERNEL

dnl echo
dnl echo ---------------------------------------------
dnl echo testing mico
dnl echo ---------------------------------------------
dnl echo

dnl CHECK_MICO

echo
echo ---------------------------------------------
echo testing MSG2QM
echo ---------------------------------------------
echo

CHECK_MSG2QM

}
else
{
  WITHIHM=""
  AC_SUBST(WITHIHM)
  CPPFLAGS="$CPPFLAGS -DMED_WITHOUT_KERNEL"
}
fi # MED_WITH_KERNEL

echo
echo ---------------------------------------------
echo Testing html generators
echo ---------------------------------------------
echo

CHECK_HTML_GENERATORS

echo
echo ---------------------------------------------
echo Summary
echo ---------------------------------------------
echo

if test "$MED_WITH_KERNEL" == "no"; then 
   echo "Configure (without Kernel)"
else
   echo Configure
fi

variables="cc_ok lex_yacc_ok python_ok swig_ok threads_ok hdf5_ok med2_ok boost_ok doxygen_ok graphviz_ok OpenGL_ok qt_ok vtk_ok omniORB_ok occ_ok Kernel_ok"
for var in $variables
do
   printf "   %10s : " `echo \$var | sed -e "s,_ok,,"`
   eval echo \$$var
done

echo
echo "Default ORB   : $DEFAULT_ORB"
echo

dnl generals files which could be included in every makefile

AC_SUBST_FILE(COMMENCE) COMMENCE=adm_local/unix/make_commence
AC_SUBST_FILE(CONCLUDE) CONCLUDE=adm_local/unix/make_conclude
AC_SUBST_FILE(MODULE) MODULE=salome_adm/unix/make_module

dnl les dependences
AC_SUBST_FILE(DEPEND) DEPEND=salome_adm/unix/depend

dnl We don t need to say when we re entering directories if we re using
dnl GNU make becuase make does it for us.
if test "X$GMAKE" = "Xyes"; then
   AC_SUBST(SETX) SETX=":"
else
   AC_SUBST(SETX) SETX="set -x"
fi

# make other build directories
for rep in salome_adm adm_local doc bin/salome include/salome lib/salome share/salome/resources idl
do
#   if test ! -d $rep ; then
#      eval mkdir $rep
#   fi
#    $INSTALL -d $rep
    mkdir -p $rep
done

echo 
echo ---------------------------------------------
echo copying resource files, shell scripts, and 
echo xml files
echo ---------------------------------------------
echo


dnl copy resources directories

#for i in `find $ROOT_SRCDIR -name 'resources' -print`
#do
#  local_res=`echo $i | sed -e "s,$ROOT_SRCDIR,.,"`
#  local_res_dir=`echo $local_res | sed -e "s,[[^/]]*$,,;s,/$,,;s,^$,.,"`
#  mkdir -p $local_res_dir
#  cd $local_res_dir
#  ln -fs $i
#  echo $local_res
#  cd $ROOT_BUILDDIR
#done

dnl copy shells and utilities contained in the bin directory
dnl excluding .in files (treated in AC-OUTPUT below) and CVS 
dnl directory

mkdir -p bin/salome
cd bin/salome

for i in $ROOT_SRCDIR/bin/*
do
  local_bin=`echo $i | sed -e "s,$ROOT_SRCDIR,.,"`
  case "$local_bin" in
        *.in | *~)                    ;;
        ./bin/CVS | ./bin/salome)                    ;;
        *) ln -fs $i .; echo $local_bin ;;
  esac
done
cd $ROOT_BUILDDIR

if test ${MED_WITH_KERNEL} = "yes"; then
AC_SUBST_FILE(ENVSCRIPT) ENVSCRIPT=salome_adm/unix/envScript
fi

dnl copy xml files to the build tree (lib directory)
dnl pourquoi ????

#cd lib
#for i in `find $ROOT_SRCDIR -name "*.xml" -print`
#do
#  ln -fs $i
#  echo `echo $i | sed -e "s,$ROOT_SRCDIR,.,"`
#done
#cd $ROOT_BUILDDIR


echo
echo ---------------------------------------------
echo generating Makefiles and configure files
echo ---------------------------------------------
echo

AC_OUTPUT_COMMANDS([ \
	chmod +x ./bin/* \
])

## do not delete this line
