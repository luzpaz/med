#  MED MEDMEM_SWIG : binding of C++ implementation and Python
#
#  Copyright (C) 2003  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
#  CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS 
# 
#  This library is free software; you can redistribute it and/or 
#  modify it under the terms of the GNU Lesser General Public 
#  License as published by the Free Software Foundation; either 
#  version 2.1 of the License. 
# 
#  This library is distributed in the hope that it will be useful, 
#  but WITHOUT ANY WARRANTY; without even the implied warranty of 
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
#  Lesser General Public License for more details. 
# 
#  You should have received a copy of the GNU Lesser General Public 
#  License along with this library; if not, write to the Free Software 
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA 
# 
#  See http://www.opencascade.org/SALOME/ or email : webmaster.salome@opencascade.org 
#
#
#
#  File   : Makefile.in
#  Author : Nadir BOUHAMOU (CEA/DEN/DM2S/SFME/LGLS)
#  Module : MED

top_srcdir=@top_srcdir@
top_builddir=../..
srcdir=@srcdir@
VPATH=.:$(srcdir)

@COMMENCE@

EXPORT_HEADERS = \
	libMEDMEM_Swig.i \
	my_typemap.i \
	MEDMEM_SWIG_Templates.hxx 
# 	MEDMEM_SWIG_MedFieldDoubleDriver.hxx \
# 	MEDMEM_SWIG_MedFieldIntDriver.hxx \
# 	MEDMEM_SWIG_AsciiFieldDoubleDriver.hxx \
# 	MEDMEM_SWIG_AsciiFieldIntDriver.hxx \
# 	MEDMEM_SWIG_FieldDouble.hxx \
# 	MEDMEM_SWIG_FieldInt.hxx \

# Libraries targets

LIB = libMEDMEM_Swigcmodule.la

# LIB_SRC = \
# 	  MEDMEM_SWIG_MedFieldDoubleDriver.cxx \
# 	  MEDMEM_SWIG_MedFieldIntDriver.cxx \
# 	  MEDMEM_SWIG_AsciiFieldDoubleDriver.cxx \
# 	  MEDMEM_SWIG_AsciiFieldIntDriver.cxx
# 	MEDMEM_SWIG_FieldDouble.cxx \
# 	  MEDMEM_SWIG_FieldInt.cxx \

ifeq (@SWIG_VERSION@, 1.3.21)
SWIG_DEF = libMEDMEM_Swig.i dummy.i

dummy_wrap.cxx: libMEDMEM_Swig_wrap.cxx
	sed -e 's/SwigValueWrapper< vector<FAMILY \* > >/vector<FAMILY \* >/g' libMEDMEM_Swig_wrap.cxx > toto
	mv toto libMEDMEM_Swig_wrap.cxx
	sed -e 's/SwigValueWrapper< vector<SUPPORT \* > const >/vector<SUPPORT \* >/g' libMEDMEM_Swig_wrap.cxx > toto
	mv toto libMEDMEM_Swig_wrap.cxx
	touch dummy_wrap.cxx
else
SWIG_DEF = libMEDMEM_Swig.i
endif

EXPORT_PYSCRIPTS = libMEDMEM_Swig.py \
		   medmem.py \
		   med_test1.py \
		   med_test2.py \
		   med_test3.py \
		   med_test_grid.py \
		   med_test_skin.py \
		   medMeshing_test.py \
		   med_field_anal.py \
		   med_opfield_test.py \
		   med_opsupp_test.py \
		   test_gibi.py \
		   test_porflow.py \
		   testDriverAscii.py \
		   gaussLocalization.py \
		   testMedMemGeneral.py

#############################################################################

LDFLAGS= -L$(top_builddir)/lib/salome 
LDFLAGSFORBIN= -L$(top_builddir)/lib/salome

CPPFLAGS+= $(PYTHON_INCLUDES) $(MED2_INCLUDES) $(HDF5_INCLUDES)
CXXFLAGS+= @CXXTMPDPTHFLAGS@
LIBS= $(PYTHON_LIBS)
LDFLAGS+= -lmedmem $(MED2_LIBS) $(HDF5_LIBS)

ifeq ($(MED_WITH_KERNEL),yes)
  CPPFLAGS+= -I${KERNEL_ROOT_DIR}/include/salome
  CXXFLAGS+= -I${KERNEL_ROOT_DIR}/include/salome
  LDFLAGS+= -L${KERNEL_ROOT_DIR}/lib/salome -lSALOMELocalTrace
endif
#############################################################################

@CONCLUDE@
