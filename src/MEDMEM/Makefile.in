#  MED MEDMEM : MED files in memory
#
#  Copyright (C) 2003  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
#  CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS 
# 
#  This library is free software; you can redistribute it and/or 
#  modify it under the terms of the GNU Lesser General Public 
#  License as published by the Free Software Foundation; either 
#  version 2.1 of the License. 
# 
#  This library is distributed in the hope that it will be useful, 
#  but WITHOUT ANY WARRANTY; without even the implied warranty of 
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
#  Lesser General Public License for more details. 
# 
#  You should have received a copy of the GNU Lesser General Public 
#  License along with this library; if not, write to the Free Software 
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA 
# 
#  See http://www.opencascade.org/SALOME/ or email : webmaster.salome@opencascade.org 
#
#
#
#  File   : Makefile.in
#  Author : Patrick GOLDBRONN (CEA/DEN/DM2S/SFME/LGLS)
#  Module : MED

top_srcdir=@top_srcdir@
top_builddir=../..
srcdir=@srcdir@
VPATH=.:$(srcdir):$(srcdir)/tests

MACHINE=PCLINUX

@COMMENCE@


EXPORT_PYSCRIPTS = \


EXPORT_HEADERS = \
MEDMEM_PointerOf.hxx \
MEDMEM_CellModel.hxx \
MEDMEM_Connectivity.hxx \
MEDMEM_Coordinate.hxx \
MEDMEM_define.hxx \
MEDMEM_DriversDef.hxx \
MEDMEM_Family.hxx \
MEDMEM_Field.hxx \
MEDMEM_GenDriver.hxx \
MEDMEM_Group.hxx \
MEDMEM_Array.hxx \
MEDMEM_Exception.hxx \
MEDMEM_MedFieldDriver.hxx \
MEDMEM_Med.hxx \
MEDMEM_MedMedDriver.hxx \
MEDMEM_MedMeshDriver.hxx \
MEDMEM_GibiMeshDriver.hxx \
MEDMEM_PorflowMeshDriver.hxx \
MEDMEM_DriverTools.hxx \
MEDMEM_ModulusArray.hxx \
MEDMEM_SkyLineArray.hxx \
MEDMEM_VtkMedDriver.hxx \
MEDMEM_VtkMeshDriver.hxx \
MEDMEM_VtkFieldDriver.hxx \
MEDMEM_Mesh.hxx \
MEDMEM_Meshing.hxx \
MEDMEM_STRING.hxx \
MEDMEM_Support.hxx \
MEDMEM_Unit.hxx \
MEDMEM_Grid.hxx \
MEDMEM_PolyhedronArray.hxx

# Libraries targets

LIB=libmedmem.la

LIB_SRC = \
MEDMEM_CellModel.cxx \
MEDMEM_Connectivity.cxx \
MEDMEM_Coordinate.cxx \
MEDMEM_DriversDef.cxx \
MEDMEM_Family.cxx \
MEDMEM_Field.cxx \
MEDMEM_GenDriver.cxx \
MEDMEM_Group.cxx \
MEDMEM_Med.cxx \
MEDMEM_Exception.cxx \
MEDMEM_MedMedDriver.cxx \
MEDMEM_MedMeshDriver.cxx \
MEDMEM_GibiMeshDriver.cxx \
MEDMEM_PorflowMeshDriver.cxx \
MEDMEM_DriverTools.cxx \
MEDMEM_SkyLineArray.cxx \
MEDMEM_Mesh.cxx \
MEDMEM_Meshing.cxx \
MEDMEM_Support.cxx \
MEDMEM_Unit.cxx \
MEDMEM_VtkMedDriver.cxx \
MEDMEM_VtkMeshDriver.cxx \
MEDMEM_Grid.cxx \
MEDMEM_PolyhedronArray.cxx


# Executables targets
BIN = med2vtk duplicateMED med_test duplicateMEDMESH
BIN_SRC = 
BIN_SERVER_IDL = 
BIN_CLIENT_IDL = 

TEST_PROGS = test_MEDMEM_ModulusArray test_MEDMEM_Array test_MEDMEM_SkyLineArray test_MEDMEM_CellModel testUPointerOf testUCoordinate testUUnit testUGeoNameMeshEntities testUMedException testUModulusArray testUSkyLineArray testUArray testUCellModel readEntete readCoordinate test_copie_field_ test_copie_fieldT test_copie_coordinate test_copie_medarray test_copie_connectivity test_copie_support test_copie_family test_copie_group test_copie_mesh test_affect_medarray test_MEDMEM_Meshing test_operation_fielddouble test_operation_fieldint test_gibi_driver test_porflow_driver test_MEDMEM_PolyhedronArray test_MEDMEM_PolyConnectivity test_MEDMEM_PolyDriverMedMeshRead test_MEDMEM_PolyDriverMedMeshWrite test_MEDMEM_PolyDescending

# testUCellModel -> a revoir car l'API a changee (plus de vector)

CPPFLAGS+=$(MED2_INCLUDES) $(HDF5_INCLUDES) -I${KERNEL_ROOT_DIR}/include/salome

CXXFLAGS+=-ftemplate-depth-42 -I${KERNEL_ROOT_DIR}/include/salome
#LDFLAGS+=$(MED2_LIBS) $(HDF5_LIBS) -lSalomeLoggerServer -L${KERNEL_ROOT_DIR}/lib/salome
# change motivated by the bug KERNEL4778.
LDFLAGS+=$(MED2_LIBS) $(HDF5_LIBS) -lSALOMELocalTrace -L${KERNEL_ROOT_DIR}/lib/salome

#LDFLAGSFORBIN+=$(MED2_LIBS) $(HDF5_LIBS) -lSalomeLoggerServer -L${KERNEL_ROOT_DIR}/lib/salome
# change motivated by the bug KERNEL4778.
LDFLAGSFORBIN+=$(MED2_LIBS) $(HDF5_LIBS) -lSALOMELocalTrace -L${KERNEL_ROOT_DIR}/lib/salome

LIBSFORBIN=

LDFLAGS=

LIBS=

# build create_mesh :
bin: create_mesh create_mesh_c2q4s2 create_mesh_c3h8q4 create_mesh_c3h8q4_wrong create_mesh_c2q4s2_wrong create_grid create_mesh_c2q4 create_mesh_c3h8 create_poly2D create_poly3D mymdump

create_mesh create_mesh_c2q4s2 create_mesh_c3h8q4 create_grid create_mesh_c2q4 create_mesh_c3h8 create_mesh_c3h8q4_wrong create_mesh_c2q4s2_wrong create_poly2D create_poly3D mymdump: %: %.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -o $@ $(MED2_LIBS) $(HDF5_LIBS) $< 

@CONCLUDE@
