//  Copyright (C) 2003  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
//  CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS 
// 
//  This library is free software; you can redistribute it and/or 
//  modify it under the terms of the GNU Lesser General Public 
//  License as published by the Free Software Foundation; either 
//  version 2.1 of the License. 
// 
//  This library is distributed in the hope that it will be useful, 
//  but WITHOUT ANY WARRANTY; without even the implied warranty of 
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
//  Lesser General Public License for more details. 
// 
//  You should have received a copy of the GNU Lesser General Public 
//  License along with this library; if not, write to the Free Software 
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA 
// 
//  See http://www.opencascade.org/SALOME/ or email : webmaster.salome@opencascade.org 
//
//
//
//  File   : Med_Gen.idl

#ifndef _Med_GEN_IDL_
#define _Med_GEN_IDL_


#include "SALOME_Exception.idl"
#include "SALOME_Component.idl"
#include "SALOMEDS.idl"
#include "MED.idl"

module Engines
{
  interface Med_Gen : Engines::Component, SALOMEDS::Driver
  {
	SALOME_MED::MESH readMeshInFile(in string fileName,
					in string studyName,
					in string meshName )
					raises (SALOME::SALOME_Exception);
	SALOME_MED::FIELD readFieldInFile(in string fileName,
					in string studyName,
					in string fieldName,
					in long ordre,
					in long iter )
					raises (SALOME::SALOME_Exception);
	SALOME_MED::MED readStructFile(in string fileName,
					in string studyName )
					raises (SALOME::SALOME_Exception);

        void readStructFileWithFieldType(in string fileName,
					 in string studyName )
	  raises (SALOME::SALOME_Exception);
  };

};

#endif
